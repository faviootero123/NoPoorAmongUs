@page
@model SaucyCapstone.Pages.Sessions.AttendanceModel
@{
}
<div class="container">
	<div class="row pt-4">
		<div class="col-6">
			<h2 class="text-primary">Session For @(Model.Session.Course.Subject.SubjectName + " " + Model.Session.Course.CourseLevel + " " + Model.Session.DayofWeek)</h2>
			<h2 class="text-primary">@(Model.Session.StartTime.ToShortTimeString()+ " - " + Model.Session.EndTime.ToShortTimeString())</h2>
		</div>
	</div>

	<a id="Previous" class="btn btn-info mx-2" asp-page="Attendance" asp-route-id="@Model.Session.SessionId" asp-route-offset="@(Model.offset - 1)">Previous Page</a>
	<a id="Next" class="btn btn-info mx-2" asp-page="Attendance" asp-route-id="@Model.Session.SessionId" asp-route-offset="@(Model.offset + 1)">Next Page</a>
	
	<br />
	<br />	
	
	<table id="dataTable" class="table table-bordered table-striped" style="width:100%">
		<thead>
			<tr>
				<th>
					Student Name					
				</th>
					@*@for (int i = 0; i < @Model.Dates.Count(); i++)
					{
						<th class="col text-center" width="20%">
							@Model.Dates[i].ToLongDateString() 
							<br>
							<button type="submit" class="btn btn-primary mt-2 mb-2">Mark All Present</button>
							<br>
							<button type="submit" class="btn btn-danger mb-2">Unmark All</button>
						</th>
					}*@

					@foreach (var SessionDate in Model.SessionDates.Select(d => d.Date).Where(d => d >= Model.BeginningRange.AddDays(28 * (double)Model.offset) && d <= Model.EndingRange.AddDays(28 * (double)Model.offset)).ToList())
					{
						<th class="col text-center" width="20%">
							@SessionDate.ToLongDateString() 
							<br>
							<button type="submit" class="btn btn-primary mt-2 mb-2">Mark All Present</button>
							<br>
							<button type="submit" class="btn btn-danger mb-2">Unmark All</button>
						</th>
					}
			</tr>
		</thead>
		<tbody>
			@if (@Model.Enrollments != null)
			{
				@foreach (var Enrollment in Model.Enrollments)
				{
					<tr>
						<td width="20%">
							@(Enrollment.Student.FirstName + " " + Enrollment.Student.LastName)
						</td>
						@*@for (int i = 0; i < @Model.Dates.Count(); i++)
						{
							<td class="col text-center" width="20%">	
								<button id="@Enrollment.StudentId-@i" type="submit" class="btn btn-outline-success" asp asp-route-StudentId="@Enrollment.StudentId" asp-route-SessionId="@Model.Session.SessionId" asp-route-Date="@Model.Dates[i]" asp-route-Color="" onclick="changeColors(this.id)" style="padding: 30px"></button>
							</td>
						}*@
						@foreach (var SessionDate in Model.SessionDates.Where(d => d.Date >= Model.BeginningRange.AddDays(28 * (double)Model.offset) && d.Date <= Model.EndingRange.AddDays(28 * (double)Model.offset)).ToList())
						{
							<td class="col text-center" width="20%">	
								<button id="@SessionDate.SessionDatesId" class="btn btn-outline-success" onclick="changeColors(this.id)" style="padding: 30px"></button>
							</td>
						}
					</tr>
				}

				@*@foreach (var Enrollment in Model.Enrollments)
				{
					<tr>
						<td width="20%">
							@(Enrollment.Student.FirstName + " " + Enrollment.Student.LastName)
						</td>
						@foreach (var Date in Model.Dates)
						{
							<td class="col text-center" width="20%">	
								<input name="Attendances[index].SessionDatesId" value="" class="btn btn-outline-success" onclick="changeColors(this.id)">
								<input name="Attendances[index].StudentId" value="@Enrollment.Student.StudentId" class="btn btn-outline-success" onclick="changeColors(this.id)">
								<input name="Attendances[index].Status" value="" class="btn btn-outline-success" onclick="changeColors(this.id)">
							</td>
						}
					</tr>
				}*@
			}


		</tbody>
	</table>
	<a class="btn btn-primary" asp-page="/Sessions/Index">Go Back</a>
</div>

@section Scripts{

	<script>
		$(document).ready(function() {
            $('#dataTable').dataTable({			
				"ordering": false
			});
            if (@Model.PastDates.Count == 0) {
				$( "#Previous" ).removeAttr( 'href' );
			} 
			if (@Model.FutureDates.Count == 0) {
				$( "#Next" ).removeAttr( 'href' );
			} 
            var Attendance = localStorage.getItem("Attendance");
		});	 


		function changeColors(val) {
            
			if (document.getElementById(val).className == "btn btn-outline-success") {
                document.getElementById(val).className = "btn btn-success";
			}
            else if (document.getElementById(val).className == "btn btn-success") {
                document.getElementById(val).className = "btn btn-danger";
			}
			else if (document.getElementById(val).className == "btn btn-danger") {
                document.getElementById(val).className = "btn btn-warning";
			}
            else if (document.getElementById(val).className == "btn btn-warning") {
                document.getElementById(val).className = "btn btn-info";
			}
            else if (document.getElementById(val).className == "btn btn-info") {
                document.getElementById(val).className = "btn btn-outline-success";
			}	
			
		}			
	</script>
}