@page
@using Data
@model SaucyCapstone.Pages.Instructor.Students.Edit.editNotesModel
@{
}

<h1>View/Edit Note</h1>
<hr />

<form method="post" enctype="multipart/form-data">
	<input type="hidden" value="@Model.Note.Student.StudentId" asp-for="@Model.NoteEditVM.StudentId" />
    <input type="hidden" value="@Model.Note.NoteId" asp-for="@Model.NoteEditVM.StudentNoteId" />
	<div class="container">
		<div class="card">
			<div class="card-body">
				<div class="col-12 col-lg-6 pb-4">
					<div class="row my-1">
						<div class="col-3">Topic</div>
						<div class="col-9">
							<input asp-for="@Model.NoteEditVM.Topic" value="@Model.Note.Topic"  class="form-control" />
							<span asp-validation-for="@Model.NoteEditVM.Topic" class="text-danger"></span>
						</div>
					</div>
					<div class="row my-1">
						<div class="col-3">Content</div>
						<input type="hidden" id="jdr" asp-for="@Model.NoteEditVM.Content"/>
						<span asp-validation-for="@Model.NoteEditVM.Content" class="text-danger"></span>
						<div id="description">
							@Html.Raw(Model.Note.Content)
						</div>  
					</div>

					<div class="row my-1">
						<div class="col-3">Role Type</div>
						<div class="col-9">
							<select asp-for="@Model.NoteEditVM.type" asp-items="@Model.RoleOfUser" class="form-select">
								<option disabled>---Select Role---</option>
								<span asp-validation-for="@Model.RoleOfUser" class="text-danger"></span>
							</select>
						</div>
					</div>
					<div class="row my-1">
						<div class="col-3">Level Type</div>
						<div class="col-9">
							<select asp-for="@Model.NoteEditVM.noteLevel" asp-items="Html.GetEnumSelectList<Note.NoteLevel>()" class="form-select">
								<option disabled>---Select Importance Level---</option>
								<span asp-validation-for="@Model.NoteEditVM.noteLevel" class="text-danger"></span>
							</select>
						</div>
					</div>
					<div class="row my-1">
						<div class="col-3">Private Note</div>
						<div class="col-9">
							<input asp-for="@Model.NoteEditVM.isPrivate" type="checkbox" class="form-check-input" >
							<span asp-validation-for="@Model.NoteEditVM.isPrivate" class="text-danger"></span>
						</div>
					</div>
				</div>
				<input type="submit" value="Save" class="btn btn-success">
                <a class="btn btn-primary" asp-route-id="@Model.Note.Student.StudentId" asp-page="/Instructor/Students/StudentNotes" >Go Back</a>
			</div>
		</div>
	</div>
</form>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

	<script>
        var toolbarOptions = [
        ['bold', 'italic', 'underline', 'strike'],        // toggled buttons
        [{ 'header': 1 }, { 'header': 2 }],               // custom button values
        [{ 'list': 'ordered' }, { 'list': 'bullet' }],
        [{ 'script': 'sub' }, { 'script': 'super' }],      // superscript/subscript
        [{ 'indent': '-1' }, { 'indent': '+1' }],          // outdent/indent
        [{ 'direction': 'rtl' }],                         // text direction

        [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown
        [{ 'header': [1, 2, 3, 4, 5, 6, false] }],

        [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme
        [{ 'align': [] }],

        ['clean']                                         // remove formatting button
        ];
        var options = {
            theme: 'snow',
            placeholder: 'Start writing here!',
            modules: {
                toolbar: toolbarOptions
            }
        };
        var quill = new Quill('#description', options);

         function handleSubmit(){
            console.info('handleSubmit called');
            document.getElementById('jdr').value = quill.root.innerHTML;
        };
     
    </script>
}