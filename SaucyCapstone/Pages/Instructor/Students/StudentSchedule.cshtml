@page
@model SaucyCapstone.Pages.Instructor.Students.StudentScheduleModel

<div class="card">
    <div class="card-header">
        <div class="h2 text-primary">
            Student Schedule
            <span class="h3 text-secondary">
                - @Model.ScheduleVM.Student.FirstName @Model.ScheduleVM.Student.LastName
            </span>
        </div>
    </div>
    <div class="card-body m-3">
        <form method="post">
            <div class="row justify-content-around">
                @foreach (var term in Model.ScheduleVM.Terms)
                {
                    <div class="col-3 text-center mb-3">
                        <input type="hidden" asp-for="ScheduleVM.StudentId" />
                        @if (Model.TermId == term.TermId)
                        {
                            <button class="btn btn-primary active mb-md-2 col-md-12" disabled>@term.TermName @term.StartDate.Year</button>
                        }
                        else
                        {
                            <button type="submit" class="btn btn-primary mb-md-2 col-md-12" asp-route-id="@term.TermId" asp-page="/Students/StudentSchedule">@term.TermName @term.StartDate.Year</button>
                        }
                    </div>
                }
            </div>
        </form>

        <div class="row justify-content-center align-items-center">
            <h5 class="col-3">
                Course
            </h5>
            <h5 class="col-3">
                Instructor
            </h5>
            <h5 class="col-3 col-md-4">
                Meeting Times
            </h5>
            <h5 class="col-2 text-end px-0">
                Manage
            </h5>
        </div>
        @foreach (var enrollment in Model.ScheduleVM.Enrollments)
        {
            <div class="row py-2 mb-3 bg-secondary rounded bg-opacity-25 align-items-center">
                @if (enrollment.Session.Course.Subject != null)
                {
                    <div class="col-3">
                        @enrollment.Session.Course.Subject.SubjectName @enrollment.Session.Course.CourseLevel
                    </div>
                }
                else
                {
                    <div class="col-3 bg-warning">
                        No Course
                    </div>
                }
                @if (enrollment.Session.Course.Instructor != null)
                {
                    <div class="col-3">
                        @enrollment.Session.Course.Instructor.FirstName @enrollment.Session.Course.Instructor.LastName
                    </div>
                }
                else
                {
                    <div class="col-3 bg-warning">
                        No Instructor
                    </div>
                }
                @foreach (var meeting in Model.ScheduleVM.Sessions)
                {

                    <div class="col-3 col-md-4">
                        @meeting.DayofWeek - @meeting.StartTime.ToShortTimeString() : @meeting.EndTime.ToShortTimeString()
                    </div>
                }
                <div class="col-2 text-end">
                    <a class="btn btn-info" asp-route-id="@enrollment.EnrollmentId" asp-page="/Sessions/Enrollments"><i class="bi bi-pencil-square"></i></a>
                </div>
            </div>
        }
        <br />
        <div id="calendar"></div>
    </div>
</div>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
        <script>
            document.addEventListener('DOMContentLoaded', function() {
                var userObj = @Html.Raw(Json.Serialize(Model.Events));
                var calendarEl = document.getElementById('calendar');
                var calendar = new FullCalendar.Calendar(calendarEl, {
                    initialView: 'timeGridWeek',
                    locale: 'pt',
                    headerToolbar: {
                        left: 'prev,next today',
                        center: 'title',
                        right: 'dayGridMonth,timeGridWeek,listWeek'
                    },
                    // this will help with assignments due at 11:59 from wrapping to next day.
                    nextDayThreshold: '02:00:00',
                    events: userObj
                    //events: [ {
                    //    id: 'a',
                    //    title: 'my event',
                    //    start: '2022-03-01'
                    // }]
                });
                calendar.render();
            });
        </script>
    }
    }
