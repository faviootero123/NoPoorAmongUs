@page
@using Data
@model SaucyCapstone.Pages.Instructor.Sessions.AttendanceModel
@{
    var BeginningRange = DateTime.Today.AddDays(-(int)DateTime.Today.DayOfWeek);
    var EndingRange = BeginningRange.AddDays(28).AddSeconds(-1);
    var FutureDates = @Model.SessionDates.Select(d => d.Date).Where(d => d >= BeginningRange.AddDays(28 * ((double)Model.offset + 1.00)) && d <= EndingRange.AddDays(28 * ((double)Model.offset + 1.00))).ToList();
    var PastDates = @Model.SessionDates.Select(d => d.Date).Where(d => d >= BeginningRange.AddDays(28 * ((double)Model.offset - 1.00)) && d <= EndingRange.AddDays(28 * ((double)Model.offset - 1.00))).ToList();
    Attendance? attendance;
    Guid ButtonGuid;
    var index = 0;

    string StatusToColor(int? Status)
    {

        return Status switch
        {
            null => "btn btn-danger",
            0 => "btn btn-success",
            1 => "btn btn-warning",
            2 => "btn btn-danger",
            3 => "btn btn-primary",
            _ => throw new Exception()
        };
    }
        string StatusToColorText(int? Status)
    {

        return Status switch
        {
            null => "Absent",
            0 => "Present",
            1 => "Late",
            2 => "Absent",
            3 => "Excused",
            _ => throw new Exception()
        };
    }

}

<div class="container p-3">
    <div class="row pt-4">
        <div class="col-9">
            <h2 localize-content>Attendence for @Model.Session.Course.Subject.SubjectName @Model.Session.Course.CourseLevel</h2>
            <h5 localize-content>
                @Model.Session.DayofWeek, @Model.Session.StartTime.ToShortTimeString() - @Model.Session.EndTime.ToShortTimeString()
            </h5>
        </div>
        <div class="col-3 text-end">
            <a localize-content class="btn btn-primary" asp-page="Index" id="CreateBtn">Back to Session</a>
        </div>
        <div class="pb-3">
            <a id="Previous" class="btn btn-info" asp-page="Attendance" asp-route-id="@Model.Session.SessionId" asp-route-offset="@(Model.offset - 1)"><localize>Previous Page</localize></a>
            <a id="Next" class="btn btn-info mx-2" asp-page="Attendance" asp-route-id="@Model.Session.SessionId" asp-route-offset="@(Model.offset + 1)"><localize>Next Page</localize></a>
        </div>
        <hr />

        <form method="post">
            <table id="dataTable" class="table table-bordered table-striped" style="width:100%">
                <thead>
                    <tr>
                        <th localize-content>
                            Student Name
                        </th>
                        @foreach (var SessionDate in Model.SessionDates.Select(d => d.Date).Where(d => d >= @BeginningRange.AddDays(28 * (double)Model.offset) && d <= @EndingRange.AddDays(28 * (double)Model.offset)).ToList())
                        {
                            <th class="col text-center" width="20%">
                                @SessionDate.ToLongDateString()
                                <br>
                                <button localize-content type="button" onclick="AllPresent('@SessionDate')" class="btn btn-primary mt-2 mb-2">Mark All Present</button>
                                <br>
                                <button localize-content type="button" onclick="AllMiss('@SessionDate')" class="btn btn-danger mb-2">Unmark All</button>
                            </th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @if (@Model.Enrollments != null)
                    {
                        @foreach (var Enrollment in Model.Enrollments)
                        {
                            <tr>
                                <td width="20%">
                                    <a class="m-2" asp-page="../Students/Add/addNotes" asp-route-studentId="@Enrollment.Student.StudentId"><img src="@Enrollment.Student.ImageUrl" width="30%" style="border-radius:5px; border:1px solid #bbb9b9" /></a>
                                    @(Enrollment.Student.FirstName + " " + Enrollment.Student.LastName)
                                </td>

                                @foreach (var SessionDate in Model.SessionDates.Where(d => d.Date >= @BeginningRange.AddDays(28 * (double)Model.offset) && d.Date <= @EndingRange.AddDays(28 * (double)Model.offset)).ToList())
                                {
                                    ButtonGuid = Guid.NewGuid();
                                    attendance = @SessionDate.Attendances?.Where(d => d.StudentId == Enrollment?.StudentId).FirstOrDefault();

                                    <td class="col text-center">
                                        <input asp-for="@Model.SessionId" value="@Model.SessionId" hidden>
                                        <input asp-for="@Model.offset" value="@Model.offset" hidden>
                                        <input name="Attendances[@index].AttendanceId" value="@(attendance?.AttendanceId ?? 0)" hidden>
                                        <input id="@(ButtonGuid + "input")" name="Attendances[@index].Status" value="@((int?)attendance?.Status ?? 2)" class="btn btn-outline-success" hidden>
                                        <input name="Attendances[@index].StudentId" value="@Enrollment.StudentId" hidden>
                                        <input name="Attendances[@index].SessionDateId" value="@SessionDate.SessionDateId" hidden>
                                        <button id="@ButtonGuid" type="button" name="@SessionDate.Date" class="@(StatusToColor((int?)attendance?.Status))" onclick="changeColors(this.id)" style="padding: 30px">@StatusToColorText((int?)attendance?.Status)</button>
                                        <br>
                                        <label for="Attendances[@index].Comment"><localize>Optional Comments</localize></label>
                                        <br>
                                        <input name="Attendances[@index].Comment" value="@attendance?.Comment">
                                    </td>
                                    index++;
                                }
                            </tr>
                        }
                    }
                </tbody>
            </table>
            <div>
                <button type="submit" class="btn btn-success btn-lg btn" style="display:block; width: 100%"><i class="bi bi-check2-circle">&nbsp;</i><localize>Save</localize></button>
            </div>
        </form>
    </div>
</div>

@section Scripts{
    <script>
        $(document).ready(function() {
            $('#dataTable').dataTable({
                "ordering": false
            });
            if (@PastDates.Count == 0) {
                $("#Previous").removeAttr('href');
            }
            if (@FutureDates.Count == 0) {
                $("#Next").removeAttr('href');
            }
        });
        function changeColors(val) {
            const button = document.getElementById(val);
            const input = document.getElementById(val + "input");

            if (button.className == "btn btn-danger") {
                button.className = "btn btn-success";
                button.textContent = "Present";
                input.value = "0";
            }
            else if (button.className == "btn btn-success") {
                button.className = "btn btn-warning";
                button.textContent = "Late";
                input.value = "1";
            }
            else if (button.className == "btn btn-warning") {
                button.className = "btn btn-primary";
                button.textContent = "Excused";
                input.value = "3";
            }
            else if (button.className == "btn btn-primary") {
                button.className = "btn btn-danger";
                button.textContent = "Absent";
                input.value = "2";
            }
        }

        function AllPresent(val) {
            const buttons = document.getElementsByName(val);

            for (let i = 0; i < buttons.length; i++) {
                buttons[i].className = "btn btn-success";
                buttons[i].textContent = "Present";
                const input = document.getElementById(buttons[i].id + "input");
                input.value = "0";
            }
        }

        function AllMiss(val) {
            const buttons = document.getElementsByName(val);

            for (let i = 0; i < buttons.length; i++) {
                buttons[i].className = "btn btn-danger";
                buttons[i].textContent = "Absent";
                const input = document.getElementById(buttons[i].id + "input");
                input.value = "2";
            }
        }
    </script>
    }
