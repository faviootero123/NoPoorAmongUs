@page
@using Data
@model SaucyCapstone.Pages.Judge.Ratings.IndexModel

@{
    ViewData["Title"] = "Index";
    int ratingsIndex = 0;
    string collapseId = "";
}

<h1>Rating Dashboard</h1>
<form method="post" asp-action="OnPostAsync" enctype="multipart/form-data">
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.RatingVM.Students[0].FirstName)
                </th>
                @foreach (var item in Model.RatingVM.Criteria)
                {
                    <th>
                        @Html.DisplayFor(modelItem => item.Description)
                    </th>
                }
                <th>@*place holder for button column*@</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var student in Model.RatingVM.Students)
            {
                collapseId = "collapse" + student.StudentId.ToString();
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => student.FirstName) @Html.DisplayFor(modelItem => student.LastName)

                    </td>
                    @foreach (var rating in student.Ratings ?? new List<Rating>())
                    {
                        <td>
                            <div class="slidecontainer">
                                <input name="Ratings[@ratingsIndex].Value" type="range" min="1" max="5" value="@rating.Value" class="slider" id="@rating.StudentID @rating.CriterionId" oninput="updateSlider(this)">
                                <input name="Ratings[@ratingsIndex].CriterionId" value="@rating.CriterionId" hidden />
                                <input name="Ratings[@ratingsIndex].StudentId" value="@student.StudentId" hidden />
                                <input name="Ratings[@ratingsIndex].RatingId" value="@rating.RatingId" hidden />
                                <p><span id="slider @rating.StudentID @rating.CriterionId">@rating.Value</span></p>
                            </div>
                        </td>
                        ratingsIndex++;
                    }
                    @foreach (var criteria in Model.RatingVM.Criteria.Where(x => x.Ratings is null))
                    {
                        <td>

                            <div class="slidecontainer">
                                <input name="Ratings[@ratingsIndex].Value" type="range" min="1" max="5" value="" class="slider" id="@student.StudentId @criteria.CriterionId" oninput="updateSlider(this)">
                                <input name="Ratings[@ratingsIndex].CriterionId" value="@criteria.CriterionId" hidden />
                                <input name="Ratings[@ratingsIndex].StudentId" value="@student.StudentId" hidden />
                                <p><span id="slider @student.StudentId @criteria.CriterionId">--</span></p>
                            </div>
                        </td>
                        ratingsIndex++;
                    }
                    <td>
                        <button class="btn btn-primary" type="button" data-bs-toggle="collapse" data-bs-target="#@collapseId" aria-expanded="false" aria-controls="@collapseId">
                            View Application
                        </button>
                    </td>
                </tr>
                <tr class="collapse" id="@collapseId">
                    <td colspan="@Model.RatingVM.Criteria.Count()+2">
                        @await Html.PartialAsync("_ApplicationPartialView", @student)
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <button type="submit" class="btn btn-primary" style="width:150px">Save Ratings</button>
</form>
